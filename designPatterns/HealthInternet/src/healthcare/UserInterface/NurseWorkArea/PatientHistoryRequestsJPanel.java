/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package healthcare.UserInterface.NurseWorkArea;

import healthcare.Commons.WorkRequestStatusType;
import healthcare.Department.Department;
import healthcare.Department.DepartmentType;
import static healthcare.Department.DepartmentType.Patient;
import healthcare.Encounter.Encounter;
import healthcare.Enterprise.Enterprise;
import healthcare.Patient.Patient;
import healthcare.Person.Person;
import healthcare.UserAccount.UserAccount;
import healthcare.WorkQueue.EnterprisePatientHistorySearchWorkRequest;
import healthcare.WorkQueue.PatientHistoryWorkRequest;
import healthcare.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Muddassar
 */
public class PatientHistoryRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Person searchedPatient;
    /**
     * Creates new form PatientHistoryRequestsJPanel
     */
    public PatientHistoryRequestsJPanel(JPanel upc, Enterprise ent) {
        initComponents();
        initComponents();
        this.userProcessContainer = upc;
        this.enterprise = ent;
        this.populateTable();
    }
    
    private void clearTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        model.setRowCount(0);
    }
    
    private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblPatientHistoryRequests.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : this.enterprise.getWorkQueue().getWorkRequestList()){
            if(request instanceof EnterprisePatientHistorySearchWorkRequest && !request.getStatus().equals(WorkRequestStatusType.Completed))
            {
                EnterprisePatientHistorySearchWorkRequest workRequest = (EnterprisePatientHistorySearchWorkRequest)request;
                PatientHistoryWorkRequest wr = workRequest.getPatientHistoryWorkRequest();
                Object[] row = new Object[3];
                row[0] = workRequest;
                if(wr != null)
                {
                    row[1] = wr.getSender().getPerson();
                    row[2] = wr.getRequestingEnterprise();
                    model.addRow(row);
                }
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnProcessRequest = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        btnSearchPatient = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientHistoryRequests = new javax.swing.JTable();

        btnProcessRequest.setText("Process Request");
        btnProcessRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessRequestActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Id", "Patient"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPatients);
        if (tblPatients.getColumnModel().getColumnCount() > 0) {
            tblPatients.getColumnModel().getColumn(0).setResizable(false);
            tblPatients.getColumnModel().getColumn(1).setResizable(false);
            tblPatients.getColumnModel().getColumn(2).setResizable(false);
        }

        btnSearchPatient.setText("Search Patient");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        tblPatientHistoryRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Message", "Request From", "Req Enterprise"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientHistoryRequests);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(136, 136, 136)
                        .addComponent(btnProcessRequest))
                    .addComponent(btnSearchPatient))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnSearchPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcessRequest)
                    .addComponent(btnBack)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessRequestActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblPatientHistoryRequests.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }
        
        EnterprisePatientHistorySearchWorkRequest historyWorkRequest = 
                (EnterprisePatientHistorySearchWorkRequest)tblPatientHistoryRequests.getValueAt(selectedRow, 0);
        PatientHistoryWorkRequest wr = historyWorkRequest.getPatientHistoryWorkRequest();
        int rowCount = tblPatients.getRowCount();
        for(int i=0; i<rowCount; i++)
        {
            boolean isChecked = (boolean)tblPatients.getValueAt(i, 0);
            if(isChecked)
            {
                Patient patient = (Patient)tblPatients.getValueAt(i, 2);
                wr.getPatientHistoryContract().getMedicationHistory().getMedicationList().addAll(patient.getMedicationHistory());
                wr.getPatientHistoryContract().getAllergies().getAllergyList().addAll(patient.getAllergyHistory().getAllergyList());
                wr.getPatientHistoryContract().getSocialHabits().getSocialHabitsList().addAll(patient.getSocialHabitSummary().getSocialHabitsList());
            }
        }
        
        historyWorkRequest.setStatus(WorkRequestStatusType.Completed);
        String sender = wr.getSender()!=null ? wr.getSender().getPerson().getName() : "";
        Logger logger = Logger.getLogger(this.getClass().toString());
        logger.log(Level.INFO,String.format("Search for PatientHistory request processed for patient:%s ", sender));
        if(rowCount!=0)
        {
            JOptionPane.showMessageDialog(null,"Request has been processed");
        }
        this.populateTable();
        this.clearTable();
    }//GEN-LAST:event_btnProcessRequestActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPatientHistoryRequests.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel)tblPatients.getModel();
        dtm.setRowCount(0);
        Person person = (Person)tblPatientHistoryRequests.getValueAt(selectedRow, 1);
        Department patientDepartment = this.enterprise.getDepartment(DepartmentType.Patient);
        searchedPatient = patientDepartment.getPersonDirectory().searchPerson(person.getSsn());
        if(searchedPatient != null && (searchedPatient instanceof Patient))
        {
            
                Object[] row = new Object[3];
                row[0] = false;
                row[1] = searchedPatient.getId();
                row[2] = searchedPatient;
                dtm.addRow(row);
            
        }
        else
        {
            PatientHistoryWorkRequest wr = (PatientHistoryWorkRequest)tblPatientHistoryRequests
            .getValueAt(selectedRow, 0);
             wr.setStatus(WorkRequestStatusType.Completed);
            JOptionPane.showMessageDialog(null,"No patient found");
            this.populateTable();
        }
        Logger logger = Logger.getLogger(this.getClass().toString());
        logger.log(Level.INFO,String.format("Search requested for person with name:%s ", person.getName()));
        
    }//GEN-LAST:event_btnSearchPatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcessRequest;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPatientHistoryRequests;
    private javax.swing.JTable tblPatients;
    // End of variables declaration//GEN-END:variables
}
