/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package healthcare.UserInterface.DoctorWorkArea;

import healthcare.Commons.WorkRequestStatusType;
import healthcare.Department.DoctorDepartment;
import healthcare.Department.LabDepartment;
import healthcare.Department.PharmacyDepartment;
import healthcare.Ecosystem.EcoSystem;
import healthcare.Enterprise.Enterprise;
import healthcare.Network.Network;
import healthcare.Patient.Patient;
import healthcare.UserAccount.UserAccount;
import healthcare.WorkQueue.AdmitPatientWorkRequest;
import healthcare.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Muddassar
 */
public class ManageMyPatientsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private LabDepartment labDepartment;
    private PharmacyDepartment pharmacyDepartment;
    private Enterprise enterprise;
    private EcoSystem system;
    /**
     * Creates new form ManageMyPatientsJPanel
     */
    public ManageMyPatientsJPanel(JPanel upc, UserAccount account, DoctorDepartment docDep, LabDepartment labDep,PharmacyDepartment pharmacyDept,Enterprise ent, EcoSystem system) {
        initComponents();
        this.userProcessContainer = upc;
        this.userAccount = account;
        this.system = system;
        this.labDepartment = labDep;
        this.pharmacyDepartment = pharmacyDept;
        this.enterprise = ent;
        this.populatePatientsTable();
    }
    
    private void populatePatientsTable()
    {
        DefaultTableModel currentPatientModel = (DefaultTableModel) tblCurrentPatients.getModel();
        currentPatientModel.setRowCount(0);
        
        DefaultTableModel oldPatientModel = (DefaultTableModel) tblOldPatients.getModel();
        oldPatientModel.setRowCount(0);
        
        for (WorkRequest request : this.userAccount.getWorkQueue().getWorkRequestList()){
            if(request instanceof AdmitPatientWorkRequest)
            {
                if(request.getStatus().equals(WorkRequestStatusType.Completed))
                {
                    Object[] row = new Object[4];
                    Patient patient = ((AdmitPatientWorkRequest)request).getPatient();
                    
                    row[0] = patient;
                    if(patient.getEncounterHistory().getEncounterList().size()>0)
                    {
                        row[1] = patient.getEncounterHistory().getEncounterList().peek().getChiefComplaint(); 
                    }
                    row[2] = request.getSender();
                    
                    oldPatientModel.addRow(row);
                    
                }
                else
                {
                    Object[] row = new Object[4];
                    Patient patient = ((AdmitPatientWorkRequest)request).getPatient();
                    row[0] = request; 
                    row[1] = patient;
                    if(patient.getCurrentEncounter() != null)
                    {
                        row[2] = patient.getCurrentEncounter().getChiefComplaint();
                    }
                    row[3] = request.getSender();
                    
                    currentPatientModel.addRow(row);
                }
            }
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCurrentPatients = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnPatientHistory = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOldPatients = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCurrentPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Patient", "Chief Complaint", "Nurse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCurrentPatients);
        if (tblCurrentPatients.getColumnModel().getColumnCount() > 0) {
            tblCurrentPatients.getColumnModel().getColumn(0).setResizable(false);
            tblCurrentPatients.getColumnModel().getColumn(1).setResizable(false);
            tblCurrentPatients.getColumnModel().getColumn(2).setResizable(false);
            tblCurrentPatients.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 44, 468, 97));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 353, -1, -1));

        btnPatientHistory.setText("View Patient History");
        btnPatientHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientHistoryActionPerformed(evt);
            }
        });
        add(btnPatientHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 147, -1, -1));

        tblOldPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient", "Chief Complaint", "Nurse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOldPatients);
        if (tblOldPatients.getColumnModel().getColumnCount() > 0) {
            tblOldPatients.getColumnModel().getColumn(0).setResizable(false);
            tblOldPatients.getColumnModel().getColumn(1).setResizable(false);
            tblOldPatients.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 212, 474, 135));

        jLabel1.setText("Current Patients");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 22, -1, -1));

        jLabel2.setText("Discharged Patients");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 182, -1, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnPatientHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientHistoryActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCurrentPatients.getSelectedRow();
        if(selectedRow < 0)
        {
            return;
        }
        
        Patient patient = (Patient)tblCurrentPatients.getValueAt(selectedRow, 1);
        WorkRequest request = (WorkRequest)tblCurrentPatients.getValueAt(selectedRow, 0);
        PatientEncounterHistoryJPanel pehjp = new PatientEncounterHistoryJPanel(userProcessContainer, patient, this.userAccount, this.labDepartment,this.pharmacyDepartment, system,request,this.enterprise);
        userProcessContainer.add("PatientEncounterHistoryJPanel", pehjp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnPatientHistoryActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        this.populatePatientsTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPatientHistory;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCurrentPatients;
    private javax.swing.JTable tblOldPatients;
    // End of variables declaration//GEN-END:variables
}
