/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package healthcare.UserInterface.PharmacyWorkArea;

import healthcare.Commons.WorkRequestStatusType;
import static healthcare.Department.DepartmentType.Patient;
import healthcare.Department.PharmacyDepartment;
import healthcare.Patient.Patient;
import healthcare.UserAccount.UserAccount;
import healthcare.WorkQueue.MedicationWorkRequest;
import healthcare.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Muddassar
 */
public class ManagePatientPrescriptionsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private PharmacyDepartment pharmacydepartment;
    private UserAccount userAccount;
    /**
     * Creates new form ManagePatientPrescriptionsJPanel
     */
    public ManagePatientPrescriptionsJPanel(JPanel upc,PharmacyDepartment department, UserAccount account) {
        initComponents();
        this.userProcessContainer = upc;
        this.userAccount = account;
        this.pharmacydepartment = department;
        this.populateTable();
    }

    private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblPrescriptions.getModel();
        model.setRowCount(0);
        for(WorkRequest request : this.pharmacydepartment.getWorkQueue().getWorkRequestList())
        {
            if(request instanceof MedicationWorkRequest && request.getStatus().equals(WorkRequestStatusType.Created))
            {
                MedicationWorkRequest mr = (MedicationWorkRequest)request;
                Object[] row = new Object[4];
                row[0] = request; 
                row[1] = mr.getMedicationOrder();
                row[2] = mr.getPatient();
                row[3] = request.getSender();
                model.addRow(row);
            }
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrescriptions = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnProcessOrder = new javax.swing.JButton();

        tblPrescriptions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Drug", "Patient", "OrderedBy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPrescriptions);
        if (tblPrescriptions.getColumnModel().getColumnCount() > 0) {
            tblPrescriptions.getColumnModel().getColumn(0).setResizable(false);
            tblPrescriptions.getColumnModel().getColumn(1).setResizable(false);
            tblPrescriptions.getColumnModel().getColumn(2).setResizable(false);
            tblPrescriptions.getColumnModel().getColumn(3).setResizable(false);
        }

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnProcessOrder.setText("Process Order");
        btnProcessOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProcessOrder)
                        .addGap(72, 72, 72))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnProcessOrder))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnProcessOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPrescriptions.getSelectedRow();
        if(selectedRow < 0)
        {
	    JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }
        
        WorkRequest wr = (WorkRequest)tblPrescriptions.getValueAt(selectedRow, 0);
        wr.setStatus(WorkRequestStatusType.Completed);
        String sender = wr.getSender()!=null ? wr.getSender().getPerson().getName():"";
        Logger logger = Logger.getLogger(this.getClass().toString());
        logger.log(Level.INFO,String.format("Medication order by Doctor:%s has been processed ",sender));
        JOptionPane.showMessageDialog(null,"Order processed");
    }//GEN-LAST:event_btnProcessOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcessOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPrescriptions;
    // End of variables declaration//GEN-END:variables
}
